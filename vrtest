-- // services
local vrService = game:GetService("VRService");
local players = game:GetService("Players");
local userInputService = game:GetService("UserInputService"); 

-- // constants
local lp = players.LocalPlayer
local currentCamera = workspace.CurrentCamera 

local serverEndpoint = lp.Backpack:FindFirstChild("ServerEndpoint", true);

-- // functions 
local performAction = function(actionName, ...)
	return serverEndpoint:InvokeServer(actionName, ...); 
end 

local createLimb = function(properties)
	local fakeLimb = serverEndpoint:InvokeServer("CreatePart", "Normal", CFrame.new(0,0,0), game.Workspace); 
	
	local patchedProperties = {}
	for key, value in next, properties do 
		patchedProperties[key .. "\0"] = value 
	end

	task.spawn(function()
		serverEndpoint:InvokeServer("SyncSurface", {{
			Part = fakeLimb,
			Surfaces = patchedProperties
		}})
	end);	

	return fakeLimb
end 

-- // setup limbs
local Head = createLimb({ Name = "Head", Transparency = 0.5 }); 
local LHand = createLimb({ Name = "LHand", Transparency = 0.5 });
local RHand = createLimb({ Name = "RHand", Transparency = 0.5 });

Head.Transparency = 1
LHand.Transparency = 1
RHand.Transparency = 1

Head.CanCollide = false
LHand.CanCollide = false
RHand.CanCollide = false

-- // update positions
local character = lp.Character
local Ltorso = character:FindFirstChild("LowerTorso"); 

Ltorso:Destroy();

userInputService.UserCFrameChanged:Connect(function(part,move)
	if part == Enum.UserCFrame.Head then
		task.spawn(function()
			serverEndpoint:InvokeServer("SyncMove", {
				{
					Part = Head,
					Anchored = true,
					CFrame = currentCamera.CFrame*(CFrame.new(move.p*(currentCamera.HeadScale-1))*move)
				}
			})
		end); 
	elseif part == Enum.UserCFrame.LeftHand then
		task.spawn(function()
			serverEndpoint:InvokeServer("SyncMove", {
				{
					Part = LHand,
					Anchored = true,
					CFrame = currentCamera.CFrame*(CFrame.new(move.p*(currentCamera.HeadScale-1))*move) * CFrame.new(0,0,-2.5) * CFrame.Angles(0,math.rad(-90),0)
				}
			})
		end); 
	elseif part == Enum.UserCFrame.RightHand then
		task.spawn(function()
			serverEndpoint:InvokeServer("SyncMove", {
				{
					Part = RHand,
					Anchored = true,
					CFrame = currentCamera.CFrame*(CFrame.new(move.p*(currentCamera.HeadScale-1))*move) * CFrame.new(0,0,-2.5) * CFrame.Angles(0,math.rad(-90),0)
				}
			})
		end); 
	end
end); 
